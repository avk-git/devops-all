This adds integration testing to CICDInstructions.
Ideally the 2nd repo. should either do
	API testing
	Selenium testing
		Selenium based docker containers are in beta stage.
		We should launch a docker container with end point 
			http://<host ip>:8181 or nginx on port 80
				host ip can be obtained by either starting the container in 
					host network
					or the host IP has to be injected as an environment variable.
			
			
			
	Alternative Jenkins suggestion: 
		https://www.jenkins.io/doc/developer/testing/

----------------------------------------------------------------------------------------- 
pipeline{
    agent any
    tools {
        maven 'M3'
    }
    stages{
        
        stage('Maven Build'){
            steps{
                git url: 'https://github.com/vilasvarghese/devops'
                sh "mvn clean package"
            }
        }
        stage('Docker Build'){
            steps{
                sh "docker build . -t vilasvarghese/mywebapp:${dockerTag()}"
            }
        }
        stage('DockerHub Push Image'){
            steps{
                withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerPwd')]) {
                    sh "docker login -u vilasvarghese -p ${dockerPwd}"
                }
                
                sh "docker push vilasvarghese/mywebapp:${dockerTag()}"
            }
        }
        stage('Docker Deploy Dev'){
            steps{
				sh(returnStdout: true, script: '''#!/bin/bash
				if ( docker ps -a | grep 'mywebapp' )
				then
					docker stop mywebapp
					docker rm -f mywebapp
				fi'''.stripIndent())
				sh "docker rmi vilasvarghese/mywebapp:${dockerTag()}"
				sh "docker run -d -p 8181:8080 --name mywebapp vilasvarghese/mywebapp:${dockerTag()}"
            }
        }
        stage('Integration Test'){
            steps{
                git url: 'https://github.com/vilasvarghese/archetypes'
                 timeout(time: 1, unit: 'HOURS') {
                    sh '''
                        docker version
                        #docker system prune --all --force
                        DOCKER_BUILDKIT=1 docker build --progress plain --no-cache .
                    '''
            
                }         
            }
        }
    }
}

def dockerTag(){
    def commitId = sh returnStdout: true, script: 'git rev-parse --short HEAD'
	return commitId
}
-----------------------------------------------------------------------------------------